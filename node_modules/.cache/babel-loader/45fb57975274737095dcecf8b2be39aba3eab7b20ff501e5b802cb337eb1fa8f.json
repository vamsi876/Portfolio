{"ast":null,"code":"var _jsxFileName = \"/Users/vamsikrishna/Documents/projects/PortfolioWebsite-main/src/components/Work/index.js\",\n  _s = $RefreshSig$();\nimport \"./index.scss\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport Timeline from \"./Timeline\";\nimport Logo1 from \"./Logo1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Work = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 3000);\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container work-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: \"Work Experience\".split(\"\"),\n            idx: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Timeline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logo1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Work, \"YlPNN7oJ+6mzs0fohZppsFcng1g=\");\n_c = Work;\nexport default Work;\nvar _c;\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"names":["AnimatedLetters","useEffect","useState","Loader","Timeline","Logo1","jsxDEV","_jsxDEV","Fragment","_Fragment","Work","_s","letterClass","setLetterClass","timerId","setTimeout","clearTimeout","children","className","strArray","split","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/vamsikrishna/Documents/projects/PortfolioWebsite-main/src/components/Work/index.js"],"sourcesContent":["import \"./index.scss\"; \nimport AnimatedLetters from \"../AnimatedLetters\"\nimport { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport Timeline from \"./Timeline\";\nimport Logo1 from \"./Logo1\";\n\nconst Work = () => {\n    \n    const [letterClass, setLetterClass] = useState('text-animate')\n\n    useEffect(() => {\n        const timerId = setTimeout(() => {\n          setLetterClass('text-animate-hover');\n        }, 3000);\n      \n        return () => {\n          clearTimeout(timerId);\n        };\n      }, []);\n\n    return (\n        <>\n            <div className = \"container work-page\"> \n                <div className = \"text-zone\"> \n                    <h1>\n                        <AnimatedLetters letterClass={letterClass}  strArray = {\"Work Experience\".split(\"\")} idx={10}/>\n                    </h1>\n                    <Timeline />\n                </div>\n            </div>\n            <Logo1/>\n            <Loader type=\"pacman\" />\n        </>\n    )\n}\nexport default Work"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,eAAe,MAAM,oBAAoB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACZ,MAAMa,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BF,cAAc,CAAC,oBAAoB,CAAC;IACtC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXG,YAAY,CAACF,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,oBACIP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAKW,SAAS,EAAG,qBAAqB;MAAAD,QAAA,eAClCV,OAAA;QAAKW,SAAS,EAAG,WAAW;QAAAD,QAAA,gBACxBV,OAAA;UAAAU,QAAA,eACIV,OAAA,CAACP,eAAe;YAACY,WAAW,EAAEA,WAAY;YAAEO,QAAQ,EAAI,iBAAiB,CAACC,KAAK,CAAC,EAAE,CAAE;YAACC,GAAG,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/F,CAAC,eACLlB,OAAA,CAACH,QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNlB,OAAA,CAACF,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACRlB,OAAA,CAACJ,MAAM;MAACuB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1B,CAAC;AAEX,CAAC;AAAAd,EAAA,CA5BKD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA6BV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}